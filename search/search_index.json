{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#home","title":"\ud83c\udfe0 Home","text":"<p>Este projeto faz parte do desafio #5DataGlowUp 23, realizado por Heitor Sasaki em parceria com a Cubos Academy.</p>"},{"location":"#objetivo","title":"Objetivo \ud83c\udfaf","text":"<p>O objetivo nas palavras do autor: \"\u00c9 um desafio de dataviz onde voc\u00ea deve criar a melhor visualiza\u00e7\u00e3o que puder.\".</p> <p>Este desafio deixa em aberto qual a perspectiva trazer com os dados, j\u00e1 que podemos trazer uma an\u00e1lise sobre os hospedeiros, fazer um dashboard com o objetivo que o cliente dele seja um h\u00f3spede em potencial ou para a diretoria da empresa, al\u00e9m de outras percep\u00e7\u00f5es, desta forma a vis\u00e3o que eu decidi mostrar como objetivo \u00e9 um overview dos im\u00f3veis, trazendo uma vis\u00e3o gerencial da companhia em rela\u00e7\u00e3o aos im\u00f3veis, de tal forma que encontrarei uma rela\u00e7\u00e3o entre os im\u00f3veis com as melhores avalia\u00e7\u00f5es, nos maiores pre\u00e7os e na maior quantidade de avalia\u00e7\u00f5es poss\u00edveis (podemos entender esta \u00faltima parte como popularidade), assim, essas tr\u00eas vari\u00e1veis juntas podem nos informar os im\u00f3veis mais rent\u00e1veis. \ud83d\udcb0\ud83e\udd11  </p> <p></p>"},{"location":"dashboard/","title":"Dashboard Looker Studio","text":""},{"location":"eda/","title":"An\u00e1lise Explorat\u00f3ria","text":""},{"location":"eda/#eda-analise-exploratoria-dos-dados","title":"EDA: An\u00e1lise Explorat\u00f3ria dos Dados","text":""},{"location":"eda/#carregando-as-bibliotecas","title":"Carregando as Bibliotecas \ud83d\udcda","text":"<pre><code>import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom forex_python.converter import CurrencyRates\nfrom matplotlib.lines import Line2D\nfrom sklearn.preprocessing import MinMaxScaler\n</code></pre>"},{"location":"eda/#lendo-os-dados","title":"Lendo os dados \ud83d\udc40","text":"<pre><code>pd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\narquivo = 'data/input/Listings.csv'\narq_rev = 'data/input/Reviews.csv'\narquivo_dic = 'data/input/Listings_data_dictionary.csv'\narq_dic = 'data/input/Reviews_data_dictionary.csv' \n</code></pre> <p>Info</p> <p>Para voc\u00ea replicar estes c\u00f3digos ser\u00e1 necess\u00e1rio baixar as fontes de dados aqui e carreg\u00e1-las nesta etapa de leitura.</p>"},{"location":"eda/#dados-dos-imoveis","title":"Dados dos im\u00f3veis \ud83c\udfe0","text":"<pre><code>df_arquivo_dic = pd.read_csv(arquivo_dic)\ndf_arquivo_dic.head(50)\n</code></pre> Field Description 0 listing_id Listing ID 1 name Listing Name 2 host_id Host ID 3 host_since Date the Host joined Airbnb 4 host_location Location where the Host is based 5 host_response_time Estimate of how long the Host takes to respond 6 host_response_rate Percentage of times the Host responds 7 host_acceptance_rate Percentage of times the Host accepts a booking... 8 host_is_superhost Binary field to determine if the Host is a Sup... 9 host_total_listings_count Total listings the Host has in Airbnb 10 host_has_profile_pic Binary field to determine if the Host has a pr... 11 host_identity_verified Binary field to determine if the Host has a ve... 12 neighbourhood Neighborhood the Listing is in 13 district District the Listing is in 14 city City the Listing is in 15 latitude Listing's latitude 16 longitude Listing's longitude 17 property_type Type of property for the Listing 18 room_type Type of room type in Airbnb for the Listing 19 accommodates Guests the Listing accomodates 20 bedrooms Bedrooms in the Listing 21 amenities Amenities the Listing includes 22 price Listing price (in each country's currency) 23 minimum_nights Minimum nights per booking 24 maximum_nights Maximum nights per booking 25 review_scores_rating Listing's overall rating (out of 100) 26 review_scores_accuracy Listing's accuracy score based on what's promo... 27 review_scores_cleanliness Listing's cleanliness score (out of 10) 28 review_scores_checkin Listing's check-in experience score (out of 10) 29 review_scores_communication Listing's communication with the Host score (o... 30 review_scores_location Listing's location score within the city (out ... 31 review_scores_value Listing's value score relative to its price (o... 32 instant_bookable Binary field to determine if the Listing can b... <p>Se tentarmos ler os arquivos dos im\u00f3veis sem configurar um enconding apropriado vamos obter um erro:</p> <p>Erro</p> <p>'utf-8' codec can't decode byte 0x81 in position 206899: invalid start byte</p> <p>Usando o encode 'iso-8859-1' encontra-se trechos, principalmente olhando na var\u00edavel 'name', com caracteres especiais como '\u0080\u009c', eu busquei encontrar um padr\u00e3o nos caracteres especiais para preencher os trechos incorretos da forma correta, mas esse padr\u00e3o alterava na medida que o idioma mudava, felizmente vi uma postagem do Luciano Vasconcelos resolvendo este problema com uma abordagem mais eficiente, onde ele corrigia os problemas com o encoding, eliminando o mal pela raiz.</p> <pre><code># Fun\u00e7\u00e3o para corrigir a codifica\u00e7\u00e3o de uma string\ndef fix_encoding(problem_string):\n    if isinstance(problem_string, str):\n        return problem_string.encode('Windows-1252', errors='ignore').decode('utf-8', errors='ignore')\n    else:\n        return problem_string\n\n# Lendo o arquivo com codifica\u00e7\u00e3o UTF-8\ndf = pd.read_csv(arquivo, encoding='utf-8', encoding_errors='ignore')\n\n# Aplicando a corre\u00e7\u00e3o de codifica\u00e7\u00e3o na coluna 'Name'\ndf['name'] = df['name'].apply(fix_encoding)\n\n# Salvando o arquivo corrigido com codifica\u00e7\u00e3o UTF-8\ndf.to_csv('data/output/Listings_new.csv', encoding='utf-8', index=False)\n\ndf = pd.read_csv('data/output/Listings_new.csv')\ndf.head()\n</code></pre> listing_id name host_id host_since host_location host_response_time host_response_rate host_acceptance_rate host_is_superhost host_total_listings_count host_has_profile_pic host_identity_verified neighbourhood district city latitude longitude property_type room_type accommodates bedrooms amenities price minimum_nights maximum_nights review_scores_rating review_scores_accuracy review_scores_cleanliness review_scores_checkin review_scores_communication review_scores_location review_scores_value instant_bookable 0 281420 Beautiful Flat in le Village Montmartre, Paris 1466919 2011-12-03 Paris, Ile-de-France, France NaN NaN NaN f 1.0 t f Buttes-Montmartre NaN Paris 48.88668 2.33343 Entire apartment Entire place 2 1.0 [\"Heating\", \"Kitchen\", \"Washer\", \"Wifi\", \"Long... 53 2 1125 100.0 10.0 10.0 10.0 10.0 10.0 10.0 f 1 3705183 39 m\u00b2 Paris (Sacre C\u0153ur) 10328771 2013-11-29 Paris, Ile-de-France, France NaN NaN NaN f 1.0 t t Buttes-Montmartre NaN Paris 48.88617 2.34515 Entire apartment Entire place 2 1.0 [\"Shampoo\", \"Heating\", \"Kitchen\", \"Essentials\"... 120 2 1125 100.0 10.0 10.0 10.0 10.0 10.0 10.0 f 2 4082273 Lovely apartment with Terrace, 60m2 19252768 2014-07-31 Paris, Ile-de-France, France NaN NaN NaN f 1.0 t f Elysee NaN Paris 48.88112 2.31712 Entire apartment Entire place 2 1.0 [\"Heating\", \"TV\", \"Kitchen\", \"Washer\", \"Wifi\",... 89 2 1125 100.0 10.0 10.0 10.0 10.0 10.0 10.0 f 3 4797344 Cosy studio (close to Eiffel tower) 10668311 2013-12-17 Paris, Ile-de-France, France NaN NaN NaN f 1.0 t t Vaugirard NaN Paris 48.84571 2.30584 Entire apartment Entire place 2 1.0 [\"Heating\", \"TV\", \"Kitchen\", \"Wifi\", \"Long ter... 58 2 1125 100.0 10.0 10.0 10.0 10.0 10.0 10.0 f 4 4823489 Close to Eiffel Tower - Beautiful flat : 2 rooms 24837558 2014-12-14 Paris, Ile-de-France, France NaN NaN NaN f 1.0 t f Passy NaN Paris 48.85500 2.26979 Entire apartment Entire place 2 1.0 [\"Heating\", \"TV\", \"Kitchen\", \"Essentials\", \"Ha... 60 2 1125 100.0 10.0 10.0 10.0 10.0 10.0 10.0 f <p>Como j\u00e1 podemos observar acima, os caracteres especiais est\u00e3o corretos, para valida\u00e7\u00e3o, eu filtrei trechos que cont\u00e9m outros idiomas, fui alterando o nome do pa\u00eds e rodando o script novamente, como consulta deixo o \u00faltimo pa\u00eds que verifiquei, a Tail\u00e2ndia, lembrando que o objetivo n\u00e3o era traduzir o alfabeto tailand\u00eas para o alfabeto romano, o idioma dos nomes permecer\u00e1 conforme foram registrados.</p> <p><pre><code>filtered_df = df[df['host_location'].str.contains('Thailand', case=False, na=False)]\nprint(filtered_df['name'].head(15))\n</code></pre> <pre><code>12016                        Belleville Serviced Apartment\n12017                           Studio with Private Garden\n12126                  Simply space but extraordinary rest\n12128                        1BR INFINITY POOL HIPSTERHOOD\n12239                     Modern/Cozy 1BR Apt downtown BKK\n12241    1BR Rooftop Garden+Gym+Pool Bangkok, 2 mins to...\n12242    356 D CondoSathu49, Bangkok (Rama3-Sathorn-Non...\n12433                  cozy &amp; great location 350m.from MRT\n12434                                 Metro luxe kasetsart\n12574                \u7b80\u98ce\u683c\u4e24\u5c45\u5ba4\u8fd1MRT/10\u5206\u949f\u5230\u8fbe\u5927\u7687\u5bab/4\u4e2a\u4eba/\u65e0\u8fb9\u6cf3\u6c60/\u65b0\u623f/\u4f9b\u63a5\u673a\u52a1\n12699     1BR with big balcony by the river, near IconSiam\n12759                       New Residence (\u0e19\u0e34\u0e27 \u0e40\u0e23\u0e2a\u0e0b\u0e34\u0e40\u0e14\u0e19\u0e0b\u0e4c)\n12855        Cozy apartment, Saphan Taksin BTS &amp; Boat pier\n13065            Sitara Place Serviced Apartment and Hotel\n13066                                New Room-5mins to MRT\nName: name, dtype: object\n</code></pre></p> <p><pre><code>filtered_df = df[df['name'].str.contains('\u0082', case=False, na=False)]\nprint(filtered_df['name'].head(15))\n</code></pre> Busquei por linhas que continham o caractere '\u0082' no meio das palavras e n\u00e3o foi encontrado nenhuma linha.</p>"},{"location":"eda/#dados-das-reviews","title":"Dados das reviews \u2b50","text":"<pre><code>df_arq_dic = pd.read_csv(arq_dic)\ndf_arq_dic.head()\n</code></pre> Field Description 0 listing_id Listing ID 1 review_id Review ID 2 date Review date 3 reviewer_id Reviewer ID <pre><code>df_rev = pd.read_csv(arq_rev)\ndf_rev.head()\n</code></pre> listing_id review_id date reviewer_id 0 11798 330265172 2018-09-30 11863072 1 15383 330103585 2018-09-30 39147453 2 16455 329985788 2018-09-30 1125378 3 17919 330016899 2018-09-30 172717984 4 26827 329995638 2018-09-30 17542859"},{"location":"eda/#analise-exploratoria-dos-dados","title":"An\u00e1lise Explorat\u00f3ria dos Dados \ud83d\udd0e","text":""},{"location":"eda/#proporcao-das-colunas-e-linhas","title":"Propor\u00e7\u00e3o das colunas e linhas \ud83d\udccb","text":"<p><pre><code>print('Im\u00f3veis \ud83c\udfe0 ',df.shape)\nprint('Reviews \u2b50 ',df_rev.shape)\n</code></pre> <pre><code>Im\u00f3veis \ud83c\udfe0  (279712, 33)\nReviews \u2b50  (5373143, 4)\n</code></pre></p>"},{"location":"eda/#observando-o-tipo-das-variaveis","title":"Observando o Tipo das Vari\u00e1veis \ud83d\udd22","text":"<p><pre><code># Im\u00f3veis \ud83c\udfe0 \ndf.dtypes\n</code></pre> <pre><code>listing_id                       int64\nname                            object\nhost_id                          int64\nhost_since                      object\nhost_location                   object\nhost_response_time              object\nhost_response_rate             float64\nhost_acceptance_rate           float64\nhost_is_superhost               object\nhost_total_listings_count      float64\nhost_has_profile_pic            object\nhost_identity_verified          object\nneighbourhood                   object\ndistrict                        object\ncity                            object\nlatitude                       float64\nlongitude                      float64\nproperty_type                   object\nroom_type                       object\naccommodates                     int64\nbedrooms                       float64\namenities                       object\nprice                            int64\nminimum_nights                   int64\nmaximum_nights                   int64\nreview_scores_rating           float64\nreview_scores_accuracy         float64\nreview_scores_cleanliness      float64\nreview_scores_checkin          float64\nreview_scores_communication    float64\nreview_scores_location         float64\nreview_scores_value            float64\ninstant_bookable                object\ndtype: object\n</code></pre></p> <p><pre><code># Reviews \u2b50\ndf_rev.dtypes\n</code></pre> <pre><code>listing_id      int64\nreview_id       int64\ndate           object\nreviewer_id     int64\ndtype: object\n</code></pre></p>"},{"location":"eda/#verificando-se-ha-valores-nulos","title":"Verificando se h\u00e1 Valores Nulos \u274c","text":"<p><pre><code># Im\u00f3veis \ud83c\udfe0 \nfaltantes = (df.isnull().sum()/len(df['listing_id']))*100\nprint(faltantes)\n</code></pre> <pre><code>listing_id                      0.000000\nname                            0.062564\nhost_id                         0.000000\nhost_since                      0.058989\nhost_location                   0.300309\nhost_response_time             46.040928\nhost_response_rate             46.040928\nhost_acceptance_rate           40.429799\nhost_is_superhost               0.058989\nhost_total_listings_count       0.058989\nhost_has_profile_pic            0.058989\nhost_identity_verified          0.058989\nneighbourhood                   0.000000\ndistrict                       86.767818\ncity                            0.000000\nlatitude                        0.000000\nlongitude                       0.000000\nproperty_type                   0.000000\nroom_type                       0.000000\naccommodates                    0.000000\nbedrooms                       10.523324\namenities                       0.000000\nprice                           0.000000\nminimum_nights                  0.000000\nmaximum_nights                  0.000000\nreview_scores_rating           32.678255\nreview_scores_accuracy         32.788368\nreview_scores_cleanliness      32.771208\nreview_scores_checkin          32.809104\nreview_scores_communication    32.779073\nreview_scores_location         32.810534\nreview_scores_value            32.814109\ninstant_bookable                0.000000\ndtype: float64\n</code></pre></p> <p>Lidar com dados faltantes \u00e9 algo que abre bastante discuss\u00f5es sobre abordagem, um caso \u00f3bvio, como a var\u00e1vel 'district', que cont\u00e9m 87% dos dados vazios, excluirei a coluna inteira. Outras colunas, como a 'host_identity_verified', possui 0,05% de linhas vazias, onde poderia pensar em manter essas linhas nulas, excluir apenas elas ou preench\u00ea-las com valores, caso fosse apropriado. </p> <p>Por\u00e9m, como o objetivo da minha abordagem \u00e9 trazer um panorama dos im\u00f3veis, essa e outras colunas s\u00e3o desnecess\u00e1rias, exclu\u00ed-la-eis.</p> <p>Como nem tudo \u00e9 perfeito, temos algumas colunas importantes para nossa an\u00e1lise sobre os im\u00f3veis que possuem linhas nulas, que s\u00e3o as reviews, mas um im\u00f3vel que tem sua linha de review vazia, n\u00e3o teve review. Para simbolizar a falta de review vou atribuir o n\u00famero zero para essas colunas. </p> <pre><code># Reviews que cont\u00e9m valores nulos\nrev_columns = [\n    'review_scores_rating',\n    'review_scores_accuracy',\n    'review_scores_cleanliness',\n    'review_scores_checkin',\n    'review_scores_communication',\n    'review_scores_location',\n    'review_scores_value'\n]\n\n# Preenchendo as colunas com valores nulos com 0\ndf[rev_columns] = df[rev_columns].fillna(0)\n</code></pre> <p>Pergunta</p> <p>Como separar quem n\u00e3o teve review com quem teve uma review como de fato sendo nota 0? </p> <p>Simples, vou contar o n\u00famero de reviews que cada im\u00f3vel teve na base de reviews, aquela com 5 milh\u00f5es de linhas, e adicionar esta coluna no dataset dos im\u00f3veis.</p> <pre><code># Contar a frequ\u00eancia de cada ID\nqty_reviews = df_rev['listing_id'].value_counts().reset_index()\n\n# Renomeando as colunas\nqty_reviews.columns = ['listing_id', 'qty_reviews']\n\nqty_reviews.head()\n</code></pre> listing_id qty_reviews 0 17222007 891 1 8637229 828 2 1249964 796 3 32011332 762 4 2399029 754 <p>Agora \u00e9 s\u00f3 adicionar essa coluna no nosso dataset de im\u00f3veis, se tiv\u00e9ssemos no Excel, era um PROCV, no SQL um LEFT JOIN, mas no Python utilizaremos o m\u00e9todo merge:</p> <p><pre><code>merge_df = df.merge(qty_reviews, on='listing_id', how='left')\n\n# Caso n\u00e3o haja reviews, preencha com 0\nmerge_df['qty_reviews'] = merge_df['qty_reviews'].fillna(0)\n</code></pre> S\u00f3 para n\u00e3o passar batido, vamos verificar se no dataset das reviews possuem valores vazios:</p> <p><pre><code># Reviews \u2b50\nfaltantes = (df_rev.isnull().sum()/len(df_rev['listing_id']))*100\nprint(faltantes)\n</code></pre> <pre><code>listing_id     0.0\nreview_id      0.0\ndate           0.0\nreviewer_id    0.0\ndtype: float64\n</code></pre></p>"},{"location":"eda/#excluindo-colunas-desnecessarias","title":"Excluindo Colunas Desnecess\u00e1rias \ud83e\uddf9","text":"<pre><code>drop_columns = [\n'host_since',                      \n'host_location',\n'host_response_time', \n'host_response_rate',    \n'host_acceptance_rate', \n'host_is_superhost', \n'host_total_listings_count',  \n'host_has_profile_pic',\n'host_identity_verified',\n'district'\n]\n\n\nmerge_df.drop(drop_columns,axis = 1, inplace = True)\n\nmerge_df.head()\n</code></pre>"},{"location":"eda/#verificando-dados-duplicados","title":"Verificando dados duplicados \ud83c\udf8c","text":"<p>O crit\u00e9rio que estou seguindo \u00e9 de validar se a coluna 'listing_id' possui dados duplicados, j\u00e1 que ela \u00e9 a coluna de linha \u00fanica para o dataset dos im\u00f3veis, j\u00e1 no dataset das reviews, esta coluna de 'listing_id' pode repetir, a que n\u00e3o pode neste caso \u00e9 a 'review_id'</p> <pre><code>duplicatas = merge_df['listing_id'].duplicated()\ncontagem_duplicatas = duplicatas.sum()\n\nif contagem_duplicatas &gt; 0:\n    print(f\"H\u00e1 {contagem_duplicatas} dados duplicados na coluna 'listing_id'.\")\nelse:\n    print(\"N\u00e3o existem dados duplicados na coluna 'listing_id'.\")\n</code></pre> <p>Resultado</p> <p>N\u00e3o existem dados duplicados na coluna 'listing_id'.</p> <pre><code># Reviews \u2b50\nduplicatas = df_rev['review_id'].duplicated()\ncontagem_duplicatas = duplicatas.sum()\n\nif contagem_duplicatas &gt; 0:\n    print(f\"H\u00e1 {contagem_duplicatas} dados duplicados na coluna 'review_id'.\")\nelse:\n    print(\"N\u00e3o existem dados duplicados na coluna 'review_id'.\")\n</code></pre> <p>Aten\u00e7\u00e3o</p> <p>H\u00e1 160 dados duplicados na coluna 'review_id'.</p> <pre><code>#Excluindo as linhas duplicadas\ndf_rev.drop_duplicates(subset=['review_id'], inplace=True)\n</code></pre>"},{"location":"eda/#ajustando-valores-dos-dados","title":"Ajustando Valores dos Dados \ud83d\udccf","text":"<p>Embora todas as notas das reviews est\u00e3o na mesma escala, de 0 a 10 e uma nota geral de 0 a 100, vou mudar a escala delas para ser de 0 a 5, porque esta \u00e9 a escala que a Airbnb divulga as notas dos im\u00f3veis em seu site.</p> <p><pre><code># Coluna de 0 a 100\nmerge_df['review_scores_rating'] = (merge_df['review_scores_rating'] / 20).round(2)\n\n# Colunas de 0 a 10\n\nrev_columns = [\n    'review_scores_accuracy',\n    'review_scores_cleanliness',\n    'review_scores_checkin',\n    'review_scores_communication',\n    'review_scores_location',\n    'review_scores_value'\n]\n\nmerge_df[rev_columns] = (merge_df[rev_columns] / 2).round(2)\n</code></pre> Outro valor que podemos ver de ajustar \u00e9 a vari\u00e1vel 'price', segundo a descri\u00e7\u00e3o em seu dicion\u00e1rio ela \u00e9:</p> <p>'Listing price (in each country's currency)'</p> <p>Ou seja, s\u00e3o valores com a moeda local de cada pa\u00eds, se quisermos avaliar os valores, n\u00e3o podemos comparar banana \ud83c\udf4c com ma\u00e7\u00e3 \ud83c\udf4e...</p> <p><pre><code>merge_df['price'].describe()\n</code></pre> <pre><code>count    279712.000000\nmean        608.792737\nstd        3441.826611\nmin           0.000000\n25%          75.000000\n50%         150.000000\n75%         474.000000\nmax      625216.000000\nName: price, dtype: float64\n</code></pre></p> <p>Ignorando quem anunciou seu im\u00f3vel de gra\u00e7a rsrs, temos um valor m\u00e1ximo de 625 mil (d\u00f3lares, reais, kwanzas?), esses valores s\u00e3o das di\u00e1rias, ent\u00e3o a menos que seja um quarto na ISS, esse valor n\u00e3o \u00e9 em d\u00f3lar, mas para solucionar esse problema, podemos listar quais cidades possu\u00edmos im\u00f3veis anunciados e consequentemente seu pa\u00eds e moeda de origem.</p> <p><pre><code>merge_df['city'].unique()[:100]\n</code></pre> array(['Paris', 'New York', 'Bangkok', 'Rio de Janeiro', 'Sydney',        'Istanbul', 'Rome', 'Hong Kong', 'Mexico City', 'Cape Town'],       dtype=object)</p> <p>Felizmente temos apenas 10 cidades, ent\u00e3o vou aproveitar a viagem e mapear manualmente os pa\u00edses correspondentes, porque essa coluna \u00e9 \u00fatil para um filtro no dashboard.</p> <p><pre><code># Dicion\u00e1rio que mapeia cada cidade ao seu pa\u00eds correspondente\ncity_to_country = {\n    'Paris': 'France',\n    'New York': 'United States',\n    'Sydney': 'Australia',\n    'Rome': 'Italy',\n    'Rio de Janeiro': 'Brazil',\n    'Istanbul': 'Turkey',\n    'Mexico City': 'Mexico',\n    'Bangkok': 'Thailand',\n    'Cape Town': 'South Africa',\n    'Hong Kong': 'Hong Kong' # Embora Hong Kong seja uma Regi\u00e3o Administrativa Especial da China, defini como um pa\u00eds \ud83d\udcaa\ud83c\udffc\n}\n\n# Fun\u00e7\u00e3o para obter o pa\u00eds com base na cidade\ndef get_country(row):\n    return city_to_country.get(row['city'], 'Unknown')\n\n# Criar uma nova coluna 'country' com base na cidade\nmerge_df['country'] = merge_df.apply(get_country, axis=1)\n\n# novo DataFrame separado para as taxas de c\u00e2mbio\nexchange_rates = pd.DataFrame({\n    'country': ['France', 'United States', 'Australia', 'Italy', 'Brazil', 'Turkey', 'Mexico', 'Thailand', 'South Africa', 'Hong Kong'],\n})\n\nc = CurrencyRates()\n\n# A taxa de c\u00e2mbio de EUR para USD est\u00e1 dando um resultado totalmente errado, por\u00e9m, USD para EUR est\u00e1 correto, ent\u00e3o tive que fazer essa corre\u00e7\u00e3o\neuro_to_usd_rate = 1+(1-c.get_rate('USD', 'EUR'))\n\ndef get_exchange_rate(row):\n    currency = country_to_currency.get(row['country'])\n    if currency == 'EUR':\n        return euro_to_usd_rate\n    return c.get_rate(currency, 'USD')\n\n# Dicion\u00e1rio que mapeia cada pa\u00eds \u00e0 sua moeda correspondente\ncountry_to_currency = {\n    'France': 'EUR',\n    'United States': 'USD',\n    'Australia': 'AUD',\n    'Italy': 'EUR',\n    'Brazil': 'BRL',\n    'Turkey': 'TRY',\n    'Mexico': 'MXN',\n    'Thailand': 'THB',\n    'South Africa': 'ZAR',\n    'Hong Kong': 'HKD',\n}\n\n# Nova coluna 'exchange_rate' no DataFrame exchange_rates\nexchange_rates['exchange_rate'] = exchange_rates.apply(get_exchange_rate, axis=1)\n\n# Merge entre o DataFrame merge_df e o DataFrame exchange_rates usando a coluna 'country' como chave\nout_df = merge_df.merge(exchange_rates, on='country', how='left')\n\n# Criar uma nova coluna 'price_usd' multiplicando 'price' por 'exchange_rate'\nout_df['price_usd'] = (out_df['price'] * out_df['exchange_rate']).round(2)\n\n# O DataFrame out_df agora conter\u00e1 as colunas 'exchange_rate' e 'price_usd'\nout_df.head()\n</code></pre> O nosso arquivo tratado est\u00e1 praticamente pronto, um \u00faltimo ajuste, apenas para uma quest\u00e3o de filtro no dashboard tamb\u00e9m, vou trocar ou valores da vari\u00e1vel 'instante_bookable' de 't' e 'f' por um texto:</p> <pre><code># Substitua 't' por 'Instant Bookable' e 'f' por 'Schedule Reservation' na coluna 'instant_bookable'\nout_df['instant_bookable'] = out_df['instant_bookable'].replace({'t': 'Instant Bookable', 'f': 'Schedule Reservation'})\n</code></pre>"},{"location":"eda/#analises-graficas","title":"An\u00e1lises Gr\u00e1ficas \ud83d\udcc8","text":""},{"location":"eda/#grafico-de-distribuicao","title":"Gr\u00e1fico de Distribui\u00e7\u00e3o \ud83d\udcca","text":"<p><pre><code># Calcular a m\u00e9dia de 'price_usd' por pa\u00eds\naverage_prices = out_df.groupby('country')['price_usd'].mean().reset_index()\n\n# Ordenar o DataFrame pela m\u00e9dia de 'price_usd' em ordem decrescente\naverage_prices = average_prices.sort_values(by='price_usd', ascending=False)\n\n# Criar um gr\u00e1fico de barras\nplt.figure(figsize=(12, 6))\nplt.bar(average_prices['country'], average_prices['price_usd'], color='#ff5a60')\nplt.xlabel('Pa\u00eds')\nplt.ylabel('M\u00e9dia de Pre\u00e7o (USD)')\nplt.title('M\u00e9dia de Pre\u00e7o (USD) por Pa\u00eds')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\n\n# Exibir o gr\u00e1fico\nplt.show()\n</code></pre>  Este \u00e9 um gr\u00e1fico simples, podemos traz\u00ea-lo direto no dashboard e se necess\u00e1rio, increment\u00e1-lo l\u00e1, ent\u00e3o deixaremos para trazer outros gr\u00e1ficos assim para a parte de cria\u00e7\u00e3o do dashboard.</p>"},{"location":"eda/#grafico-de-dispersao","title":"Gr\u00e1fico de Dispers\u00e3o \ud83d\udc68\ud83c\udffd\u200d\ud83d\udc68\ud83c\udffd\u200d\ud83d\udc66\ud83c\udffd\u200d\ud83d\udc67\ud83c\udffd","text":"<p><pre><code># Criar um gr\u00e1fico de dispers\u00e3o\nplt.figure(figsize=(8, 6))\nplt.scatter(out_df['price_usd'], out_df['review_scores_rating'], color='#ff5a60', alpha=0.5)\nplt.title('Correla\u00e7\u00e3o entre Valor do Im\u00f3vel e Nota de Avalia\u00e7\u00e3o')\nplt.xlabel('Valor do Im\u00f3vel')\nplt.ylabel('Nota da Avalia\u00e7\u00e3o')\nplt.grid(True)\n\n# Exibir o gr\u00e1fico\nplt.show()\n</code></pre>  Usando duas dimens\u00f5es podemos facilmente ver uma concentra\u00e7\u00e3o na parte superior esquerda, que indica \u00f3timas avalia\u00e7\u00f5es e pre\u00e7o menos, podemos observar um ac\u00famulo de im\u00f3veis com nota zero, que entra na quest\u00e3o de im\u00f3veis sem avalia\u00e7\u00e3o que discutimos anteriormente. Al\u00e9m disso, temos um ponto isolado que custa mais de 120 mil d\u00f3lares, este ponto \u00e9: <pre><code>selected_columns = ['name', 'neighbourhood', 'city', 'country', 'property_type', 'qty_reviews','price', 'price_usd']\nout_df2 = out_df[selected_columns]\n\nout_df2 = out_df2.sort_values(by='price_usd', ascending=False)\nout_df2.head(30)\n</code></pre></p> name neighbourhood city country property_type qty_reviews price price_usd 181027 Temporary rentals for Brazilian Cup. Sao Cristovao Rio de Janeiro Brazil Shared room in house 0.0 625216 127783.41 162251 Hotel Boutique Maison Salamanca Cuauhtemoc Mexico City Mexico Room in boutique hotel 0.0 499000 29095.47 134601 B&amp;B Linda House - Double bedroom between Copac... Copacabana Rio de Janeiro Brazil Private room in bed and breakfast 0.0 134562 27502.16 44515 3 quartos Elegante na Av Atlantica com Vista P... Copacabana Rio de Janeiro Brazil Entire apartment 0.0 129233 26413.01 245011 Owesome flat in Botafogo Botafogo Rio de Janeiro Brazil Entire apartment 0.0 129080 26381.74 245787 Rio Spot Homes T027 Barra da Tijuca Rio de Janeiro Brazil Entire apartment 4.0 129080 26381.74 64485 Apartamento Alma Carioca | RIO136 Ipanema Rio de Janeiro Brazil Entire apartment 3.0 129080 26381.74 219194 Amplo apartamento para fam\u00edlias Lagoa Rio de Janeiro Brazil Entire apartment 0.0 129080 26381.74 235968 Studio in Botafogo Botafogo Rio de Janeiro Brazil Entire apartment 97.0 129080 26381.74 239720 Linda vista com jardim em Santa Teresa Santa Teresa Rio de Janeiro Brazil Entire apartment 33.0 129080 26381.74 137832 B&amp;B Zul e Verde - Large quadruple room in the ... Copacabana Rio de Janeiro Brazil Private room in bed and breakfast 0.0 126233 25799.86 134600 B&amp;B Peixoto - Double ensuite room in Copacabana Copacabana Rio de Janeiro Brazil Private room in bed and breakfast 0.0 126233 25799.86 134602 B&amp;B Angela Copa - Double bedroom in Copacabana Copacabana Rio de Janeiro Brazil Private room in bed and breakfast 0.0 126233 25799.86 134599 B&amp;B Zul e Verde - Large bedroom in the heart o... Copacabana Rio de Janeiro Brazil Private room in bed and breakfast 0.0 126233 25799.86 61242 Apt Claudia Copa Copacabana Rio de Janeiro Brazil Entire apartment 0.0 126233 25799.86 137831 B&amp;B Zul e Verde - Large triple room in the hea... Copacabana Rio de Janeiro Brazil Private room in bed and breakfast 0.0 126233 25799.86 244010 Holiday Rentals for up to 5 people in Copacaba... Copacabana Rio de Janeiro Brazil Entire apartment 1.0 112205 22932.78 211416 STIO CANTINHO DAS GAR\u00c7AS - GUARATIBA #505 Guaratiba Rio de Janeiro Brazil Entire house 0.0 111411 22770.50 211419 Casa no Jardim Botanico #512 Alto da Boa Vista Rio de Janeiro Brazil Entire house 0.0 110918 22669.73 37652 Esplendida Cobertura com Vista para o Mar Barra da Tijuca Rio de Janeiro Brazil Entire apartment 1.0 109281 22335.16 98808 Habitacion a 40min del centro historico Iztapalapa Mexico City Mexico Private room in house 0.0 350000 20407.64 111113 ******Paddington Sydney***** Woollahra Sydney Australia Private room in house 2.0 28613 18703.58 210814 M/Y ONEWORLD - All-Inclusive Superyacht Charter Sydney Sydney Australia Boat 0.0 23571 15407.76 36228 Cute 1 bedroom flat in the center of Paris. Gobelins Paris France Entire apartment 2.0 12000 13059.08 60735 Amazing apartment 10P-St Marcel/Mouffetard MASQ Gobelins Paris France Entire apartment 4.0 11599 12622.69 196424 Room in the most exclusive area in Mexico City Miguel Hidalgo Mexico City Mexico Private room in apartment 3.0 206499 12040.45 202783 Entire Palace - 8 Apartments at Piazza Di Spagna I Centro Storico Rome Italy Entire condominium 0.0 10571 11503.96 204377 Ocean View Villa with Pool in Joa - ilive010 Sao Conrado Rio de Janeiro Brazil Entire villa 0.0 55978 11440.94 222758 COZY AND CONFORTABLE 2BDR - LB1-0022 Leblon Rio de Janeiro Brazil Entire apartment 0.0 55489 11341.00 44312 COPACABANA RIO - Beautiful Beachfront 4 -BDR #... Copacabana Rio de Janeiro Brazil Entire apartment 0.0 55311 11304.62 <p>'Temporary rentals for Brazilian Cup' no Rio de Janeiro, acho improv\u00e1vel um im\u00f3vel ter este valor de di\u00e1ria mesmo em uma data especial como a de uma Copa do Mundo, al\u00e9m disso, foi por causa deste im\u00f3vel que a m\u00e9dia dos im\u00f3veis do Brasil foi a mais alta entre todos os pa\u00edses, sendo uma surpresa para 0 pessoas que ele n\u00e3o foi alugado nenhuma vez, at\u00e9 porqu\u00ea, \u00e9 120 mil em um quarto compartilhado kkrying \ud83e\udd23</p> <p>Al\u00e9m do fato dele ser um im\u00f3vel anunciado como um aluguel tempor\u00e1rio por causa da Copa do Mundo e ela j\u00e1 passou... Vou remover este dado do dataset.</p> <p><pre><code>out_df = out_df.drop(181027)\n</code></pre> Desconsiderando este im\u00f3vel que acabamos de excluir, os outros im\u00f3veis tamb\u00e9m possuem um valor bem alto, um gr\u00e1fico que \u00e9 bom para identifica\u00e7\u00e3o desses poss\u00edveis outliers \u00e9 o boxplot:</p> <p><pre><code>plt.figure(figsize=(10, 6))\nsns.boxplot(data=out_df, x='country', y='price_usd')\nplt.title('Distribui\u00e7\u00e3o de Pre\u00e7os por Pa\u00eds')\nplt.xticks(rotation=45)\nplt.show()\n</code></pre> </p> <p>Entramos no dilema dos outliers. </p> <p>Pergunta</p> <p>Poder\u00edamos simplesmente remover esses pontos isolados para ter valores, como m\u00e9dias, mais coerentes com nossos dados reais?</p> <p>Eu n\u00e3o sou especialista neste assunto de im\u00f3veis, ent\u00e3o o que me restou foi realizar um cornojob, onde pesquisei no pr\u00f3prio site da Airbnb im\u00f3veis nestes locais com filtros para obter os maiores valores, inclusive, faltou um 'Filtrar por maior pre\u00e7o' no site, em alguns casos eu tive que editar o valor direto na URL para filtrar.</p> <ul> <li>Rio de Janeiro</li> <li>Austr\u00e1lia</li> <li>Cidade do M\u00e9xico</li> </ul> <p>Em todos os casos existe im\u00f3veis de alto padr\u00e3o correspondentes aos pre\u00e7os altos encontrados no dataset, ent\u00e3o aqueles valores que por mais que sejam muito altos, s\u00e3o reais.</p> <p>Decis\u00e3o:</p> <p>Vou manter todos esses dados, posso na etapa do dashboard criar uma label para filtrar e excluir esses valores da visualiza\u00e7\u00e3o dos dados, para quando for pertinenete.</p> <p>'Ah! mas voc\u00ea j\u00e1 removeu aquela linha que tinha um quarto compartilhado de 120 mil d\u00f3lares no RJ'</p> <p>Bem, j\u00e1 havia dito o qu\u00e3o r\u00eddiculo era aquele caso, pelo pr\u00f3prio dataset era poss\u00edvel saber que n\u00e3o se tratava de um im\u00f3vel luxuoso, mas como desencargo de consci\u00eancia, eu tamb\u00e9m realizei uma pesquisa com im\u00f3veis no RJ por mais de 100k d\u00f3lares e s\u00f3 achei outros belos e majestosos im\u00f3veis como o que exclu\u00ed, o melhor que desta vez tem fotos, vale a pena conferir:</p> <p>Rio de Janeiro +100k USD</p> <p>Vamos voltar ao nosso gr\u00e1fico de dispers\u00e3o, agora sem aquele outlier, os pontos que estavam achatados na esquerda ser\u00e3o melhores distribu\u00eddos. Tamb\u00e9m vamos aproveitar e incrementar o gr\u00e1fico, adicionando mais um eixo nele, plotando assim um gr\u00e1fico em 3D, com:</p> <ul> <li>Valor do im\u00f3vel</li> <li>Review do im\u00f3vel</li> <li>Quantidade de review </li> </ul> <p><pre><code># Criar um gr\u00e1fico tridimensional\nfig = plt.figure(figsize=(10, 8))\nax = fig.add_subplot(111, projection='3d')\n\nx = out_df['price_usd']\ny = out_df['review_scores_rating']\nz = out_df['qty_reviews']\n\n# Scatter plot tridimensional\nax.scatter(x, y, z, c='#ff5a60', marker='o', alpha=0.5)\n\nax.set_xlabel('price_usd')\nax.set_ylabel('review_scores_rating')\nax.set_zlabel('Popularidade (qrt_reviews)')\n\nplt.title('Rela\u00e7\u00e3o entre Valor do Im\u00f3vel, Nota de Avalia\u00e7\u00e3o e Popularidade')\n\n# Exibir o gr\u00e1fico tridimensional\nplt.show()\n</code></pre>  Com este gr\u00e1fico atual a gente separou o joio do trigo \ud83c\udf3e. Antes um im\u00f3vel com alto valor poderia receber 1 ou 2 feedbacks e ficar bem posicionado, usando a quantidade de reviews sabemos quais s\u00e3o de fato os mais populares e lucrativos. Se voc\u00ea tem dificuldade em enxergar em um mapa de 3 dimens\u00f5es, neste gr\u00e1fico a melhor posi\u00e7\u00e3o \u00e9 para frente, onde as revies tendem a 5, para cima, onde a popularidade (etiqueta cortada), est\u00e1 tendendo a 800 e por fim, onde o pre\u00e7o est\u00e1 para direta, chegando at\u00e9 30 mil.</p> <p>Conseguiu entender? Bom! Ent\u00e3o vamos complicar mais um pouco... Podemos agrupor por instant_bookable, essa vari\u00e1vel basicamente determina o que pode ser alugado de imediato e o que n\u00e3o pode. Casas sem hospedeiros podem ser alugadas instantaneamente, j\u00e1 as casas que est\u00e3o alugadas, precisam ser reservadas para o final do contrato atual.</p> <p>Ent\u00e3o mesmo ocupando uma \u00f3tima posi\u00e7\u00e3o no gr\u00e1fico, se a casa est\u00e1 dispon\u00edvel, \u00e9 sinal que dinheiro por ela n\u00e3o t\u00e1 entrando no caixa.</p> <p><pre><code>color_map = {'Instant Bookable': '#ff5a60', 'Schedule Reservation': 'black'}\ncolors = out_df['instant_bookable'].map(color_map)\n\n# Criar um gr\u00e1fico tridimensional\nfig = plt.figure(figsize=(10, 8))\nax = fig.add_subplot(111, projection='3d')\n\nx = out_df['price_usd']\ny = out_df['review_scores_rating']\nz = out_df['qty_reviews']\n\n# Scatter plot tridimensional\nax.scatter(x, y, z, c=colors, marker='o', alpha=0.5)\n\nax.set_xlabel('price_usd')\nax.set_ylabel('review_scores_rating')\nax.set_zlabel('Popularidade (qty_reviews)')\n\n# Adicionar legenda\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Instant Bookable', markerfacecolor='#ff5a60', markersize=10),\n                   Line2D([0], [0], marker='o', color='w', label='Schedule Reservation', markerfacecolor='black', markersize=10)]\nax.legend(handles=legend_elements)\n\n\n\nplt.title('Rela\u00e7\u00e3o entre Valor do Im\u00f3vel, Nota de Avalia\u00e7\u00e3o e Popularidade (agrupado por instant_bookable)')\n\n# Exibir o gr\u00e1fico tridimensional\nplt.show()\n</code></pre> </p>"},{"location":"eda/#mapa-de-calor","title":"Mapa de Calor \ud83d\udd25\ud83d\uddfa\ufe0f","text":"<p><pre><code># Selecionar as colunas num\u00e9ricas\nnumeric_columns = out_df.select_dtypes(include=['number'])\n\n# Calcular a matriz de correla\u00e7\u00e3o\ncorrelation_matrix = numeric_columns.corr()\n\n# Criar um mapa de calor\nplt.figure(figsize=(10, 8))\nsns.heatmap(correlation_matrix, annot=True, cmap='Reds', fmt='.2f')\nplt.title('Mapa de Calor das Vari\u00e1veis')\nplt.show()\n</code></pre>  Tirando as correla\u00e7\u00f5es \u00f3bvias, como notas das reviews que s\u00e3o correlacionadas, assim como o valor da moeda e seu respectivo valor convertido em d\u00f3lar e afins, n\u00e3o achei nenhum ponto muito interessante, mas este heatmap \u00e9 apenas das vari\u00e1veis num\u00e9ricas, vamos finalizar a explora\u00e7\u00e3o em Python e continuar em nosso dashboard.</p>"},{"location":"eda/#definindo-um-score","title":"Definindo um Score \ud83e\udd47","text":"<p>Conforme vimos no gr\u00e1fico de dispers\u00e3o, quando trazemos uma contextualiza\u00e7\u00e3o da situa\u00e7\u00e3o de neg\u00f3cio para os dados analisados, observar uma v\u00e1riavel isolada, duas ou mais, pode n\u00e3o ser o suficiente e o pior, elas podem nos levar a cometer erros em nossas decis\u00f5es, o gr\u00e1fico de dispers\u00e3o em 3D que montamos ele ajuda muito a entendermos como aquelas 3 vari\u00e1veis se comportam para a defini\u00e7\u00e3o dos melhores im\u00f3veis, por\u00e9m, se a leitura dele pode ser dif\u00edcil at\u00e9 para um analista fazer de bate e pronto, ent\u00e3o imagina para uma diretoria...</p> <p>Ent\u00e3o para o dashboard a minha ideia e traduzir aquele gr\u00e1fico em uma tabela, que simplesmente traga um 'Top 5 Melhores Im\u00f3veis' e para isso, eu vou criar um sistema de pontua\u00e7\u00e3o que relacione essas 3 v\u00e1riaveis.</p> <p>Ponto de Aten\u00e7\u00e3o</p> <p>N\u00e3o podemos simplesmente relacionar um valor com o outro diretamente, que diferente de um gr\u00e1fico, n\u00e3o teremos eixos distintos, trabalharemos em um \u00fanico plano, ent\u00e3o o valor do im\u00f3vel tem muito mais d\u00edgitos que comparado as notas que v\u00e3o at\u00e9 o n\u00famero 5.</p> <p>Solu\u00e7\u00e3o:</p> <p>Normalizar os dados.</p> <p>Ponto de Aten\u00e7\u00e3o</p> <p>As 3 vari\u00e1veis tendo a mesma propor\u00e7\u00e3o traz uma nova quest\u00e3o, uma vari\u00e1vel \u00e9 mais importante que outra para car\u00e1ter de decis\u00e3o?  </p> <p>Solu\u00e7\u00e3o:</p> <p>Cria\u00e7\u00e3o arbitr\u00e1ria de pesos, para dosar cada vari\u00e1vel.</p> <p>F\u00f3rmula:</p> <p>Score = (Peso_Pre\u00e7o * Pre\u00e7o) + (Peso_Nota * Nota) + (Peso_Qty_Review * Qty_Review)</p> <p><pre><code># Defi\u00e7\u00e3o dos pesos para cada vari\u00e1vel\npeso_preco = 0.4\npeso_nota = 0.2\npeso_reviews = 0.4\n# Esses valores podem ser alterados, mas a soma de todos precisa resutar em 1\n\n\n# Vamos criar um novo DF copiando o DF original\nscore_df = out_df.copy()\n\n# Normalizando as colunas 'price_usd', 'review_scores_rating' e 'qty_reviews'\nscaler = MinMaxScaler()\n\n# Essas colunas s\u00e3o auxiliares, ent\u00e3o ap\u00f3s o c\u00e1lculo da pontua\u00e7\u00e3o, podemos exclu\u00ed-las\nscore_df[['price_usd_normalized', 'review_scores_rating_normalized', 'qty_reviews_normalized']] = scaler.fit_transform(out_df[['price_usd', 'review_scores_rating', 'qty_reviews']])\n\n# Calcular a pontua\u00e7\u00e3o usando a f\u00f3rmula\nscore_df['Score'] = (peso_preco * score_df['price_usd_normalized'] +\n                             peso_nota * score_df['review_scores_rating_normalized'] +\n                             peso_reviews * score_df['qty_reviews_normalized'])\n\n# Excluindo as colunas normalizadas\nscore_df.drop(['price_usd_normalized', 'review_scores_rating_normalized', 'qty_reviews_normalized'], axis=1, inplace=True)\n\n# Ordenando o DataFrame pela pontua\u00e7\u00e3o em ordem decrescente\nscore_df = score_df.sort_values(by='Score', ascending=False)\n\nscore_df.head()\n</code></pre> Vamos agora dar uma analisada neste Top 5.</p> <p>Embora tenhamos pre\u00e7os muito altos no topo, tamb\u00e9m temos em algumas posi\u00e7\u00f5es valores bem baixos, vamos multiplic\u00e1-los pela quantidade de reviews, na ideia que isso proporcionalmente indique a quantidade de clientes destes im\u00f3veis e assim, termos um valor arrecadado total com o im\u00f3vel.</p> <p>Detalhe:</p> <p>Esse valor arrecadado n\u00e3o \u00e9 o valor absoluto arrecadado, porque muitas pessoas alugam os im\u00f3veis e n\u00e3o enviam review, este \u00e9 um valor tendo base apenas a quantidade de pessoas que sabemos devido as reviews.</p> <pre><code>novo_df = score_df[['price_usd', 'review_scores_rating', 'qty_reviews','Score']].copy()\nnovo_df['price_accumulated'] = score_df['price_usd'] * score_df['qty_reviews']\nnovo_df.head()\n</code></pre> price_usd review_scores_rating qty_reviews Score price_accumulated 235968 26381.74 4.75 97.0 0.596239 2559028.78 167067 82.71 4.70 891.0 0.589137 73694.61 131663 80.44 4.80 828.0 0.564823 66604.32 239720 26381.74 4.65 33.0 0.563507 870597.42 178743 9357.35 4.75 526.0 0.554783 4921966.10 <p>Mesmo o pre\u00e7o acumulado dos im\u00f3veis de 80 d\u00f3lares sendo inferior ao #4 e #5, ainda veja como merecido a posi\u00e7\u00e3o deles, aquele n\u00famero alto de reviews com mais de 800 me diz mais sobre o sucesso daqueles im\u00f3veis do que o que teve 33 reviews.</p> <p>Eu testei v\u00e1rias propor\u00e7\u00f5es de pesos, mas a que achei mais interessante foi a rela\u00e7\u00e3o de 80% do pseudo pre\u00e7o acumulado + 20% de pondera\u00e7\u00e3o pela nota geral das reviews.</p> <p>Voc\u00ea pode testar outras, no dashboard teremos a tabela dos melhores, junto com o ID do im\u00f3vel, assim bou fazer outro gr\u00e1fico que seja poss\u00edvel acompanhar a quantidade de reviews hist\u00f3ricas de um im\u00f3vel em espec\u00edfico, trazendo ainda mais contexto para o nosso sistema de pontua\u00e7\u00e3o.</p> <p><pre><code># Extrair a coluna 'host_location'\ncoluna_host_location = df['host_location']\n\n# Criar um novo DataFrame apenas com a coluna 'host_location'\nnovo_df = pd.DataFrame({'host_location': coluna_host_location})\n\n# Salvar o novo DataFrame em um arquivo Excel\nnovo_df.to_excel('host_location.xlsx', index=False, engine='openpyxl')\n</code></pre> Antes de sair eu baixei esta coluna s\u00f3 para dar uma analisada no Excel mesmo, tenho 2 pontos para ela:</p> <ul> <li>Incluir lista suspensa para valida\u00e7\u00e3o de dados para a localiza\u00e7\u00e3o;</li> <li>Resolver o problema de 2 ou mais pa\u00edses cadastrados em um \u00fanico registro.</li> </ul> <p>Essa coluna foi exclu\u00edda da nossa base final, mas pensando como um profissional da companhia, este ponto n\u00e3o poderia ser negligenciado, assim como tornar obrigat\u00f3rios alguns campos como a quantidade de quartos.</p>"},{"location":"eda/#salvando-os-resultados","title":"Salvando os Resultados \ud83d\udcbe","text":"<pre><code>output = 'Listings_output.csv'\n\n# Salve o DataFrame como um arquivo CSV com codifica\u00e7\u00e3o UTF-8\nscore_df.to_csv(output, encoding='utf-8', index=False)\n\nprint(f'O arquivo {output} foi salvo com sucesso.')\n\noutput = 'Reviews_output.csv'\n\n# Salve o DataFrame como um arquivo CSV com codifica\u00e7\u00e3o UTF-8\ndf_rev.to_csv(output, encoding='utf-8', index=False)\n\nprint(f'O arquivo {output} foi salvo com sucesso.')\n</code></pre>"}]}